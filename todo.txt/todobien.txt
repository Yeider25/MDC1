/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
App.JS:

const express = require('express');
const bodyParser = require("body-parser");
const mysql = require('mysql2/promise');
const app = express();
/* const expresssession = require('express-session');  */

app.use(bodyParser.urlencoded({ extended: true }));
app.use(bodyParser.json());
app.use(express.static(__dirname + '/../Vistas'));
/* app.use(expresssession({
    secret:'YV',
    resave:false,
    saveUninitialized:false
})); */

const db = mysql.createPool({
    host: 'localhost',
    user: "root",
    password: "",
    database: "co"
});

app.post('/Crear', async(req, res) => {
    const { Nombre, TipoDocumento, Documento } = req.body;
    try {
        const [indicador] = await db.query('SELECT * FROM usuarios WHERE Documento=? AND TipoDocumento=?', [Documento, TipoDocumento,]);
        if (indicador.length > 0) {
            res.status(409).send(`<script>alert('Ya existe este usuario');window.location.href="/Vistas/Registro.html";</script>`);
        } else {
            await db.query('INSERT INTO usuarios (Nombre, TipoDocumento, Documento, Rol) VALUES (?, ?, ?, ?)', [Nombre, TipoDocumento, Documento, "usuario"]);
            res.status(201).send(`<script>alert('Su registro fue completado');window.location.href='Iniciodesesion.html';</script>`);
        }
    } catch (error) {
        console.error('Error en el servidor:', error);
        res.status(500).send("<script>alert('Error en el servidor');window.location.href='Iniciodesesion.html';</script>");
    }
});

app.post("/Iniciar", async(req, res) => {
    const { TipoDocumento, Documento, Man} = req.body;
    try {
        const [usuario] = await db.query('SELECT * FROM usuarios WHERE Documento=? AND TipoDocumento=?', [Documento, TipoDocumento]);
        if (usuario.length > 0) {
            if (usuario[0].Rol === "Administrador") {
                res.redirect(`/Admin?usuario=${usuario[0].Nombre}`);
            } else {
                res.redirect(`/Bienvenida?usuario=${usuario[0].Nombre}`);
            }
        } else {
            res.status(401).send("No existes");
        }
    } catch (error) {
        console.error("Error en el servidor: ", error);
        res.status(500).send("<script>alert('Error en el servidor');window.location.href='Iniciodesesion.html';</script>");
    }
});

app.get('/Bienvenida', (req, res) => {
    res.sendFile('Usuarios.html', { root: __dirname + '/../Vistas' });
});

app.get('/Admin', (req, res) => {
    res.sendFile('Admin.html', { root: __dirname + '/../Vistas' });
});

app.post('/obtener-servicios-usuario', async(req, res) => {
    try {
        const [serviciosData] = await db.query(`
            SELECT Nombre 
            FROM servicios
        `);

        res.json({ servicios: serviciosData.map(row => row.Nombre) });
    } catch (error) {
        console.log('Error en el servidor:', error);
        res.status(500).send('Error en el servidor');
    }
});

app.post('/guardar-servicios-usuario', async(req, res) => {
    const { usuario, servicios, fecha } = req.body;
    try {
        const [usuarioRow] = await db.query('SELECT Id_usuario FROM usuarios WHERE Nombre = ?', [usuario]);
        const userId = usuarioRow[0].Id_usuario;
        for (const servicio of servicios) {
            await db.query('INSERT INTO solicitudes (Id_usuario, Codigo_servicio, Fecha) VALUES (?, (SELECT Codigo_servicio FROM servicios WHERE Nombre = ?), ?)', [userId, servicio, fecha]);
        }
        res.status(201).send('Servicios guardados correctamente');
    } catch (error) {
        console.error('Error en el servidor:', error);
        res.status(500).send('Error en el servidor');
    }
});

app.post('/obtener-solicitudes-usuario', async(req, res) => {
    const { usuario } = req.body;
    try {
        const [usuarioRow] = await db.query('SELECT Id_usuario FROM usuarios WHERE Nombre = ?', [usuario]);
        const userId = usuarioRow[0].Id_usuario;
        const [solicitudesData] = await db.query(`
            SELECT s.ID_solicitud, s.Fecha, se.Nombre 
            FROM solicitudes s 
            INNER JOIN servicios se ON s.Codigo_servicio = se.Codigo_servicio 
            WHERE s.Id_usuario = ?`, [userId]);
        res.json({ solicitudes: solicitudesData });
    } catch (error) {
        console.error('Error en el servidor:', error);
        res.status(500).send('Error en el servidor');
    }
});

app.post('/borrar-solicitud', async(req, res) => {
    const { solicitudId } = req.body;
    try {
        await db.query('DELETE FROM solicitudes WHERE ID_solicitud = ?', [solicitudId]);
        res.status(200).send('Solicitud borrada correctamente');
    } catch (error) {
        console.error('Error en el servidor:', error);
        res.status(500).send('Error en el servidor');
    }
});

app.post('/obtener-manzanas-registradas', async(req, res) => {
    try {
        const [manzanasData] = await db.query('SELECT * FROM manzanas');
        res.json({ manzanas: manzanasData });
    } catch (error) {
        console.error('Error en el servidor:', error);
        res.status(500).send('Error en el servidor');
    }
});

app.post('/obtener-servicios-registrados', async(req, res) => {
    try {
        const [serviciosData] = await db.query('SELECT * FROM servicios');
        res.json({ servicios: serviciosData });
    } catch (error) {
        console.error('Error en el servidor:', error);
        res.status(500).send('Error en el servidor');
    }
});

app.post('/obtener-solicitudes-registradas', async(req, res) => {
    try {
        const [solicitudesData] = await db.query('SELECT * FROM solicitudes');
        res.json({ solicitudes: solicitudesData });
    } catch (error) {
        console.error('Error en el servidor:', error);
        res.status(500).send('Error en el servidor');
    }
});

app.post('/obtener-usuarios-registrados', async(req, res) => {
    try {
        const [usuariosData] = await db.query('SELECT * FROM usuarios');
        res.json({ usuarios: usuariosData });
    } catch (error) {
        console.error('Error en el servidor:', error);
        res.status(500).send('Error en el servidor');
    }
});

app.post('/cerrar-sesion', (req, res) => {
    res.status(200).send('Sesión cerrada correctamente');
});

app.listen(3000, () => {
    console.log("Servidor Node.js escuchando");
});



/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Usuario.html

<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="Estilo3.css">
    <title>Usuario</title>
</head>

<body>
    <div class="xd">
        <h1 id="Id_usuario">Hola señor usuario!</h1>
        <button id="Servicios_disponibles">Servicios disponibles</button>
        <button id="Servicios_inscritos">Ver servicios inscritos</button>
        <button id="Cerrar_sesion">Cerrar sesión</button>
        <div id="Contenedor_servicios" style="display: none;">
            <form id="FormularioSeleccionServicio" style="margin: 30px;">
                <ul id="lista_servicios"></ul>
                <input type="datetime-local" id="fechaHora" name="fecha">
                <button type="submit">Guardar</button>
            </form>
        </div>
        <div id="Solicitudes_contenedor" style="display: none;">
            <h2>Servicios inscritos:</h2>
            <ul id="Lista_solicitudes"></ul>
        </div>

        <script>
            document.addEventListener('DOMContentLoaded', () => {
                const params = new URLSearchParams(window.location.search);
                const usuario = params.get('usuario');
                document.getElementById('Id_usuario').textContent = `Bienvenido: ${usuario}`;

                const Contenedor_servicios = document.getElementById('Contenedor_servicios');
                const FormularioSeleccionServicio = document.getElementById('FormularioSeleccionServicio');
                const Servicios_disponibles = document.getElementById('Servicios_disponibles');
                const Servicios_inscritos = document.getElementById('Servicios_inscritos');
                const Solicitudes_contenedor = document.getElementById('Solicitudes_contenedor');
                const Lista_solicitudes = document.getElementById('Lista_solicitudes');
                const Cerrar_sesion = document.getElementById('Cerrar_sesion');

                let visibleServicios = false;
                let visibleSolicitudes = false;

                Servicios_disponibles.addEventListener('click', () => {
                    if (visibleServicios) {
                        Contenedor_servicios.style.display = 'none';
                    } else {
                        const xhr = new XMLHttpRequest();
                        xhr.open('POST', '/obtener-servicios-usuario', true);
                        xhr.setRequestHeader('Content-Type', 'application/json');
                        xhr.onreadystatechange = function() {
                            if (xhr.readyState === 4) {
                                if (xhr.status === 200) {
                                    const data = JSON.parse(xhr.responseText);
                                    lista_servicios.innerHTML = data.servicios.map(servicio => `
                                <label><input type="checkbox" name="servicios" value="${servicio}"> ${servicio}</label>`).join('');
                                    Contenedor_servicios.style.display = 'block';
                                } else {
                                    console.error('Error al obtener servicio');
                                }
                            }
                        };
                        xhr.send(JSON.stringify({
                            usuario
                        }));
                    }
                    visibleServicios = !visibleServicios;
                });

                Servicios_inscritos.addEventListener('click', () => {
                    if (visibleSolicitudes) {
                        Solicitudes_contenedor.style.display = 'none';
                    } else {
                        const xhr = new XMLHttpRequest();
                        xhr.open('POST', '/obtener-solicitudes-usuario', true);
                        xhr.setRequestHeader('Content-Type', 'application/json');
                        xhr.onreadystatechange = function() {
                            if (xhr.readyState === 4) {
                                if (xhr.status === 200) {
                                    const data = JSON.parse(xhr.responseText);
                                    Lista_solicitudes.innerHTML = data.solicitudes.map(solicitud => `
                                    <li>
                                        ID: ${solicitud.ID_solicitud}, 
                                        Fecha: ${solicitud.Fecha}, 
                                        Servicio: ${solicitud.Nombre}
                                        <button class="btn-borrar-solicitud" data-id="${solicitud.ID_solicitud}">Eliminar Solicitud</button>
                                    </li>
                                `).join('');
                                    Solicitudes_contenedor.style.display = 'block';
                                } else {
                                    console.error('Error al obtener solicitudes');
                                }
                            }
                        };
                        xhr.send(JSON.stringify({
                            usuario
                        }));
                    }
                    visibleSolicitudes = !visibleSolicitudes;
                });

                FormularioSeleccionServicio.addEventListener('submit', async(event) => {
                    event.preventDefault();
                    const serviciosSeleccionados = Array.from(FormularioSeleccionServicio.elements['servicios'])
                        .filter(checkbox => checkbox.checked)
                        .map(checkbox => checkbox.value);
                    const fechaHora = FormularioSeleccionServicio.elements['fecha'].value;
                    const xhrGuardar = new XMLHttpRequest();
                    xhrGuardar.open('POST', '/guardar-servicios-usuario', true);
                    xhrGuardar.setRequestHeader('Content-Type', 'application/json');
                    xhrGuardar.onreadystatechange = function() {
                        if (xhrGuardar.readyState === 4) {
                            if (xhrGuardar.status === 201) {
                                alert('Servicios guardados correctamente');
                            } else {
                                console.error('Error al guardar servicios');
                            }
                        }
                    };
                    const data = {
                        usuario,
                        servicios: serviciosSeleccionados,
                        fecha: fechaHora
                    };
                    xhrGuardar.send(JSON.stringify(data));
                });

                document.addEventListener('click', (event) => {
                    if (event.target.classList.contains('btn-borrar-solicitud')) {
                        const solicitudId = event.target.dataset.id;
                        const confirmarBorrado = confirm('¿Estás seguro de que deseas borrar este Servicio?');
                        if (confirmarBorrado) {
                            const xhrBorrar = new XMLHttpRequest();
                            xhrBorrar.open('POST', '/borrar-solicitud', true);
                            xhrBorrar.setRequestHeader('Content-Type', 'application/json');
                            xhrBorrar.onreadystatechange = function() {
                                if (xhrBorrar.readyState === 4) {
                                    if (xhrBorrar.status === 200) {
                                        alert('Solicitud borrada correctamente');
                                        1
                                        Servicios_inscritos.click();
                                    } else {
                                        console.error('Error al borrar solicitud');
                                    }
                                }
                            };
                            xhrBorrar.send(JSON.stringify({
                                solicitudId
                            }));
                        }
                    }
                });
                Cerrar_sesion.addEventListener('click', () => {
                    const xhr = new XMLHttpRequest();
                    xhr.open('POST', '/cerrar-sesion', true);
                    xhr.setRequestHeader('Content-Type', 'application/json');
                    xhr.onreadystatechange = function() {
                        if (xhr.readyState === 4) {
                            if (xhr.status === 200) {
                                window.location.href = 'Iniciodesesion.html';
                            } else {
                                console.error('Error al cerrar sesión');
                            }
                        }
                    };
                    xhr.send(JSON.stringify({
                        usuario
                    }));
                });
            });
        </script>
</body>

</html>


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Admin.html:

<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="Estilo4.css">
    <title>Bienvenido Admin</title>
</head>

<body>
    <h1 id="ID_Usuario">Hola Admin</h1>
    <button id="Boton_ver_manzanas_registradas">Ver manzanas registradas</button>
    <button id="Boton_ver_servicios_registrados">Ver servicios registrados</button>
    <button id="Boton_ver_solicitudes_registradas">Ver solicitudes registradas</button>
    <button id="Boton_ver_usuarios_registrados">Ver usuarios registrados</button>
    <button id="Cerrar_sesion">Cerrar sesión</button>

    <div id="Contenedor_manzanas_registradas" style="display: none;">
        <h2>Manzanas registradas</h2>
        <ul id="Lista_manzanas_registradas">

        </ul>
    </div>

    <div id="Contenedor_servicios_registrados" style="display: none;">
        <h2>Servicios registrados</h2>
        <ul id="Lista_servicios_registrados">

        </ul>
    </div>

    <div id="Contenedor_solicitudes_registradas" style="display: none;">
        <h2>Solicitudes registradas</h2>
        <ul id="Lista_solicitudes_registradas">

        </ul>
    </div>

    <div id="Contenedor_usuarios_registrados" style="display: none;">
        <h2>Usuarios registrados</h2>
        <ul id="Lista_usuarios_registrados">

        </ul>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const params = new URLSearchParams(window.location.search);
            const usuario = params.get('usuario');
            document.getElementById('ID_Usuario').textContent = `Bienvenido Administrador: ${usuario}`;

            const Contenedor_manzanas_registradas = document.getElementById('Contenedor_manzanas_registradas');
            const Contenedor_servicios_registrados = document.getElementById('Contenedor_servicios_registrados');
            const Contenedor_solicitudes_registradas = document.getElementById('Contenedor_solicitudes_registradas');
            const Contenedor_usuarios_registrados = document.getElementById('Contenedor_usuarios_registrados');
            const Cerrar_sesion = document.getElementById('Cerrar_sesion');

            let visibleManzanas = false;
            let visibleServicios = false;
            let visibleSolicitudes = false;
            let visibleUsuarios = false;

            Boton_ver_manzanas_registradas.addEventListener('click', () => {
                if (visibleManzanas) {
                    Contenedor_manzanas_registradas.style.display = 'none';
                } else {
                    const xhr = new XMLHttpRequest();
                    xhr.open('POST', '/obtener-manzanas-registradas', true);
                    xhr.setRequestHeader('Content-Type', 'application/json');
                    xhr.onreadystatechange = function() {
                        if (xhr.readyState === 4) {
                            if (xhr.status === 200) {
                                const data = JSON.parse(xhr.responseText);
                                Lista_manzanas_registradas.innerHTML = data.manzanas.map(manzana => `
                                    <li>
                                        Codigo_manzana: ${manzana.Codigo_manzana}<br>
                                        Nombre: ${manzana.Nombre}<br>
                                        Localidad: ${manzana.Localidad}<br>
                                        Direccion: ${manzana.Dirección}<br>
                                        Codigo_servicio: ${manzana.Codigo_servicio}<br>
                                        <button class="btn-borrar-manzana" data-id="${manzana.Codigo_manzana}">Borrar información manzana</button>
                                        <button class="btn-editar-manzana" data-id="${manzana.Codigo_manzana}">Editar información manzana</button>
                                        <button class="btn-guardar-cambios-manzana" data-id="${manzana.Codigo_manzana}">Guardar cambios manzana</button>
                                    </li>
                                `).join('');
                                Contenedor_manzanas_registradas.style.display = 'block';
                            } else {
                                console.error('Error al obtener manzanas registradas');
                            }
                        }
                    };
                    xhr.send();
                }
                visibleManzanas = !visibleManzanas;
            });

            Boton_ver_servicios_registrados.addEventListener('click', () => {
                if (visibleServicios) {
                    Contenedor_servicios_registrados.style.display = 'none';
                } else {
                    const xhr = new XMLHttpRequest();
                    xhr.open('POST', '/obtener-servicios-registrados', true);
                    xhr.setRequestHeader('Content-Type', 'application/json');
                    xhr.onreadystatechange = function() {
                        if (xhr.readyState === 4) {
                            if (xhr.status === 200) {
                                const data = JSON.parse(xhr.responseText);
                                Lista_servicios_registrados.innerHTML = data.servicios.map(servicios => `
                                    <li>
                                        Codigo_servicio: ${servicios.Codigo_servicio}<br>
                                        Nombre: ${servicios.Nombre}<br>
                                        Tipo: ${servicios.Tipo}<br>
                                        Descripcion: ${servicios.Descripción}<br>
                                        <button class="btn-borrar-servicio" data-id="${servicios.Codigo_servicio}">Borrar información servicio</button>
                                        <button class="btn-editar-servicio" data-id="${servicios.Codigo_servicio}">Editar información servicio</button>
                                        <button class="btn-guardar-cambios-servicio" data-id="${servicios.Codigo_servicio}">Guardar cambios servicio</button>
                                    </li>
                                `).join('');
                                Contenedor_servicios_registrados.style.display = 'block';
                            } else {
                                console.error('Error al obtener servicios registrados');
                            }
                        }
                    };
                    xhr.send();
                }
                visibleServicios = !visibleServicios;
            });

            Boton_ver_solicitudes_registradas.addEventListener('click', () => {
                if (visibleSolicitudes) {
                    Contenedor_solicitudes_registradas.style.display = 'none';
                } else {
                    const xhr = new XMLHttpRequest();
                    xhr.open('POST', '/obtener-solicitudes-registradas', true);
                    xhr.setRequestHeader('Content-Type', 'application/json');
                    xhr.onreadystatechange = function() {
                        if (xhr.readyState === 4) {
                            if (xhr.status === 200) {
                                const data = JSON.parse(xhr.responseText);
                                Lista_solicitudes_registradas.innerHTML = data.solicitudes.map(solicitudes => `
                                    <li>
                                        ID_solicitud: ${solicitudes.ID_solicitud}<br>
                                        Fecha: ${solicitudes.Fecha}<br>
                                        ID_Usuario: ${solicitudes.ID_Usuario}<br>
                                        Codigo_servicio: ${solicitudes.Codigo_servicio}<br>
                                        Codigo_manzana: ${solicitudes.Codigo_manzana}<br>
                                        <button class="btn-borrar-solicitud" data-id="${solicitudes.Codigo_solicitud}">Borrar información solicitud</button>
                                        <button class="btn-editar-solicitud" data-id="${solicitudes.Codigo_solicitud}">Editar información solicitud</button>
                                        <button class="btn-guardar-cambios-solicitud" data-id="${solicitudes.Codigo_solicitud}">Guardar cambios solicitud</button>
                                    </li>
                                `).join('');
                                Contenedor_solicitudes_registradas.style.display = 'block';
                            } else {
                                console.error('Error al obtener solicitudes registradas');
                            }
                        }
                    };
                    xhr.send();
                }
                visibleSolicitudes = !visibleSolicitudes;
            });

            Boton_ver_usuarios_registrados.addEventListener('click', () => {
                if (visibleUsuarios) {
                    Contenedor_usuarios_registrados.style.display = 'none';
                } else {
                    const xhr = new XMLHttpRequest();
                    xhr.open('POST', '/obtener-usuarios-registrados', true);
                    xhr.setRequestHeader('Content-Type', 'application/json');
                    xhr.onreadystatechange = function() {
                        if (xhr.readyState === 4) {
                            if (xhr.status === 200) {
                                const data = JSON.parse(xhr.responseText);
                                Lista_usuarios_registrados.innerHTML = data.usuarios.map(usuarios => `
                                    <li>
                                        ID_Usuario: ${usuarios.ID_Usuario}<br>
                                        Nombre: ${usuarios.Nombre}<br>
                                        TipoDocumento: ${usuarios.TipoDocumento}<br>
                                        Documento: ${usuarios.Documento}<br>
                                        Rol: ${usuarios.Rol}<br>
                                        Codigo_manzana: ${usuarios.Codigo_manzana}<br>
                                        <button class="btn-borrar-usuario" data-id="${usuarios.ID_Usuario}">Borrar información usuario</button>
                                        <button class="btn-editar-usuario" data-id="${usuarios.ID_Usuario}">Editar información usuario</button>
                                        <button class="btn-guardar-cambios-usuario" data-id="${usuarios.ID_Usuario}">Guardar cambios usuario</button>
                                    </li>
                                `).join('');
                                Contenedor_usuarios_registrados.style.display = 'block';
                            } else {
                                console.error('Error al obtener usuarios registrados');
                            }
                        }
                    };
                    xhr.send();
                }
                visibleUsuarios = !visibleUsuarios;
            });
            Cerrar_sesion.addEventListener('click', () => {
                const xhr = new XMLHttpRequest();
                xhr.open('POST', '/cerrar-sesion', true);
                xhr.setRequestHeader('Content-Type', 'application/json');
                xhr.onreadystatechange = function() {
                    if (xhr.readyState === 4) {
                        if (xhr.status === 200) {
                            window.location.href = 'Iniciodesesion.html';
                        } else {
                            console.error('Error al cerrar sesión');
                        }
                    }
                };
                xhr.send(JSON.stringify({
                    usuario
                }));
            });
        });
    </script>
</body>

</html>
